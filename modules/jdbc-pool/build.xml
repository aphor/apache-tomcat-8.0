<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project name="Tomcat Trunk" default="build" basedir="../..">


  <!-- ===================== Initialize Property Values =================== -->

  <!-- See "build.properties.sample" in the top level directory for all     -->
  <property name="version.major"         value="1" />
  <property name="version.minor"         value="0" />
  <property name="version.build"         value="3" />
  <property name="version.patch"         value="-beta" />
  <property name="version"               value="${version.major}.${version.minor}.${version.build} ${version.patch}" />
  <!-- property values you must customize for successful building!!!        -->
  <property file="${user.home}/build.properties"/>
  <property file="${basedir}/modules/jdbc-pool/build.properties"/>
  <property file="${basedir}/build.properties"/>

  <property file="${basedir}/build.properties.default"/>

  <!-- Project Properties -->
  <property name="name"                  value="Apache Tomcat" />
  <property name="year"                  value="2007" />

  <property name="project"               value="apache-tomcat-jdbc-pool" />
  <property name="final.name"            value="${project}-${version}" />
  <property name="final-src.name"        value="${project}-${version}-src" />

  <!-- Build Defaults -->
  <property name="tomcat.pool" value="${basedir}/modules/jdbc-pool/output"/>
  <property name="tomcat.build"      value="${basedir}/output/build"/>
  <property name="tomcat.classes"    value="${basedir}/output/classes"/>
  <property name="tomcat.dist"       value="${basedir}/output/dist"/>
  <property name="tomcat.extras"     value="${basedir}/output/extras"/>
  <property name="tomcat.deployer"   value="${basedir}/output/deployer"/>
  <property name="tomcat.release"    value="${basedir}/output/release"/>
  <property name="test.failonerror"  value="true"/>
  <property name="test.runner"       value="junit.textui.TestRunner"/>

  <!-- Can't be lower - jsp uses templates -->
  <property name="compile.source" value="1.5"/>

  <!-- JAR artifacts -->
  <property name="tomcat-dbcp.home" value="${base.path}/tomcat6-deps/dbcp" />
  <property name="tomcat-dbcp.jar" value="${tomcat-dbcp.home}/tomcat-dbcp.jar"/>
  <property name="tomcat-jdbc.jar" value="${tomcat.pool}/tomcat-jdbc.jar"/>
  <property name="tomcat-jdbc-src.jar" value="${tomcat.pool}/tomcat-jdbc-src.jar"/>

  <!-- Classpath -->
  <path id="tomcat.classpath">
    <pathelement location="${tomcat.classes}"/>
  </path>
	
  <path id="test.classpath">
  	<pathelement location="${tomcat-jdbc.jar}"/>
  	<pathelement location="${tomcat.classes}"/>
    <fileset dir="${base.path}">
      <include name="**/tomcat-dbcp.jar"/>
      <include name="**/junit.jar"/>
      <include name="**/mysql-connector-java-5.0.7-bin.jar"/>
    </fileset>
  </path>

  <target name="prepare">
    <mkdir dir="${tomcat.pool}"/>
  </target>

  <target name="build">
    <mkdir dir="${tomcat.pool}"/>
    <path id="tomcat.jdbc.classpath">
      <pathelement path="${tomcat.classpath}"/>
    </path>

    <!-- compile org.apache.tomcat.jdbc-->
    <javac srcdir="${basedir}/modules/jdbc-pool/java" destdir="${tomcat.classes}"
           debug="${compile.debug}"
           deprecation="${compile.deprecation}"
           source="${compile.source}"
           optimize="${compile.optimize}">
      <classpath refid="tomcat.jdbc.classpath"/>
      <include name="org/apache/tomcat/jdbc/**" />
    </javac>
    
    <!-- connection pool JAR File -->
    <jar jarfile="${tomcat-jdbc.jar}">
      <fileset dir="${tomcat.classes}">
        <include name="org/apache/tomcat/jdbc/**" />
      </fileset>
    </jar>
  	<!-- connection pool source file-->
    <jar jarfile="${tomcat-jdbc-src.jar}">
      <fileset dir="${basedir}/modules/jdbc-pool/java">
        <include name="org/apache/tomcat/jdbc/**" />
      </fileset>
    </jar>
    <!-- create checksums -->
    <checksum file="${tomcat-jdbc.jar}" forceOverwrite="yes" fileext=".md5" />
    <checksum file="${tomcat-jdbc-src.jar}" forceOverwrite="yes" fileext=".md5" />
  </target>

  <target name="clean"> 
      <delete file="${tomcat-jdbc.jar}"/>
      <delete file="${tomcat-jdbc.jar}.md5"/>
      <delete file="${tomcat-jdbc-src.jar}"/>
      <delete file="${tomcat-jdbc-src.jar}.md5"/>
      <delete includeemptydirs="true">
          <fileset dir="${tomcat.classes}">
            <include name="org/apache/tomcat/jdbc/**"/>
          </fileset>
      </delete>
  </target>
	
  <target name="test" depends="clean,build">
    <!-- compile org.apache.tomcat.jdbc-->
    <javac srcdir="${basedir}/modules/jdbc-pool/test" destdir="${tomcat.classes}"
           debug="${compile.debug}"
           deprecation="${compile.deprecation}"
           source="${compile.source}"
           optimize="${compile.optimize}">
      <classpath refid="test.classpath"/>
      <include name="org/apache/tomcat/jdbc/**" />
    </javac>
  	
  	<java classname="org.junit.runner.JUnitCore" classpathref="test.classpath" fork="false">
      <arg line="org.apache.tomcat.jdbc.test.CheckOutThreadTest" />
    </java>
  </target>	
	
  <target name="docs"> 
  	<xslt basedir="${basedir}/modules/jdbc-pool/doc"
          destdir="${tomcat.pool}/"
  	      extension=".html"
  	      style="webapps/docs/tomcat-docs.xsl"
  	      excludes="build.xml project.xml"
  	      includes="*.xml">
  	  <param name="relative-path" expression="."/>
  	</xslt>	
  </target>
	
  <target name="dist" depends="clean, build, docs">
	<property name="destdir" value="${tomcat.pool}/release/v${version}"/>
  	<mkdir dir="${destdir}"/>
  	<zip destfile="${destdir}/apache-tomcat-jdbc-${version}.zip">
  	  <fileset dir="${tomcat.pool}">
  	  	<include name="jdbc-pool.html"/>
  	  	<include name="changelog.html"/>
  	  	<include name="tomcat-jdbc.jar"/>
        <include name="tomcat-jdbc-src.jar"/>
        <include name="tomcat-jdbc.jar.md5"/>
        <include name="tomcat-jdbc-src.jar.md5"/>
  	  </fileset>
      <fileset dir="${basedir}/output/build/bin">
      	<include name="tomcat-juli.jar"/>
      </fileset>	
  	</zip>
    <tar destfile="${destdir}/apache-tomcat-jdbc-${version}.tar">
      <fileset dir="${tomcat.pool}">
        <include name="jdbc-pool.html"/>
        <include name="tomcat-jdbc.jar"/>
        <include name="tomcat-jdbc-src.jar"/>
        <include name="tomcat-jdbc.jar.md5"/>
        <include name="tomcat-jdbc-src.jar.md5"/>
      </fileset>
      <fileset dir="${basedir}/output/build/bin">
        <include name="tomcat-juli.jar"/>
      </fileset>    
    </tar>
    <gzip src="${destdir}/apache-tomcat-jdbc-${version}.tar"
  	      destfile="${destdir}/apache-tomcat-jdbc-${version}.tar.gz"/>
    <delete file="${destdir}/apache-tomcat-jdbc-${version}.tar"/>
    <echo message="Options +Indexes" file="${destdir}/.htaccess"/>
  </target>
  	
  <!-- Download and dependency building -->
  <target name="proxyflags">
    <!-- check proxy parameters. -->
    <condition property="useproxy">
      <equals arg1="${proxy.use}" arg2="on" />
    </condition>
  </target>

  <target name="setproxy" depends="proxyflags" if="useproxy">
    <taskdef name="setproxy"
            classname="org.apache.tools.ant.taskdefs.optional.net.SetProxy" />
    <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"
              proxyuser="${proxy.user}" proxypassword="${proxy.password}" />
    <echo message="Using ${proxy.host}:${proxy.port} to download ${sourcefile}"/>
  </target>

  <target name="testexist">
    <echo message="Testing  for ${destfile}"/>
    <available file="${destfile}" property="exist"/>
  </target>

  <target name="downloadfile" unless="exist" depends="setproxy,testexist">
    <!-- Download extract the file -->
    <mkdir dir="${destdir}" />
    <get src="${sourcefile}" dest="${destfile}" />
  </target>
	
  <target name="downloadgz" unless="exist" depends="setproxy,testexist">
    <!-- Download and extract the package -->
    <get src="${sourcefile}" dest="${base.path}/file.tar.gz" />
    <gunzip src="${base.path}/file.tar.gz" dest="${base.path}/file.tar"/>
    <untar src="${base.path}/file.tar" dest="${base.path}"/>
    <delete file="${base.path}/file.tar"/>
    <delete file="${base.path}/file.tar.gz"/>
  </target>
</project>
