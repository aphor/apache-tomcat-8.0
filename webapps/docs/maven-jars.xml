<?xml version="1.0"?>
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="maven-jars.html">

    &project;

    <properties>
        <author email="fhanik@apache.org">Filip Hanik</author>
        <title>Apache Tomcat - Using Tomcat libraries with Maven</title>
    </properties>

<body>


<section name="Using Tomcat libraries With Maven">
    <subsection name="Tomcat Snapshots">
      Tomcat snapshots are located in the 
      <a href="http://people.apache.org/repo/m2-snapshot-repository/org/apache/tomcat/">Apache Snapshot Repository</a>.
      The official URL is <source>http://people.apache.org/repo/m2-snapshot-repository/org/apache/tomcat/</source><br/>
      Snapshots are done periodically, not on a regular basis, but when changes happen and the Tomcat team deams a new snapshot might 
      useful.
    </subsection>
    <subsection name="Tomcat Releases(staging)">
      At every release, be it alpha, beta or stable, we will publish the JARs to 
      <a href="http://tomcat.apache.org/dev/dist/m2-repository/org/apache/tomcat/">Tomcat's Staging Repository</a>.
      The URL for this is <source>http://tomcat.apache.org/dev/dist/m2-repository/org/apache/tomcat/</source>.<br/>
    </subsection>
    <subsection name="Tomcat Releases(iBiblio Mirror))">
      We are also publishing all requested Tomcat JARs to the ibiblio mirror at ASF.
    </subsection>

</section>

<section name="Publishing Tomcat JARs to a Maven Repository">
  <subsection name="Setting Up">
    Almost everything you need is in the <code>res/maven</code> directory.<br/>
    Basically the publish is done using ANT, and Maven's ANT tasks.
    Getting Maven to play well with the SCP protocol can be somewhat of a daunting task
    so I have tried to explain all the steps here.<br/>
    <b>Step 1</b><br/>
    Make sure you have the following installed:<br/>
    ANT 1.6.5 or later <br/>
    Maven 2.0.6<br/>
    JDK 1.5<br/>
    And then make sure you have the <a href="http://svn.apache.org/viewvc/tomcat/trunk/res/maven"><code>res/maven</code></a> 
    directory checked out.<br/>
    <b>Step 2</b><br/>
    Download the <a href="http://people.apache.org/~fhanik/tomcat/maven/maven-artifact-ant-2.0.4-dep.jar">Maven ANT tasks</a>, due to a delayed release, I've created a patched version
    so make sure you download <a href="http://people.apache.org/~fhanik/tomcat/maven/maven-ant-tasks-attached-patch.jar">the PATCH</a> as well.<br/>
    Store both these files in the <code>res/maven</code> directory.<br/>
    <b>Step 3</b><br/>
    At this point you are ready to rock and roll.
    Change any properties in the <code>maven.properties.default</code> file, or simply create a 
    file named <code>maven.properties</code> where you can override any properties you need.<br/>
    To publish a release do <source>ant -f mvn-pub.xml deploy-release</source><br/>
    To publish a to a staging repo do <source>ant -f mvn-pub.xml deploy-staging</source><br/>
    and to publish snapshots do <source>ant -f mvn-pub.xml deploy-snapshot</source><br/>
    <br/>
    The next section describes all the steps I had to take to get everything to work publishing from a Windows box.
    Some of these steps can be skipped on Unix as the SSH handling works better there.
  </subsection>
  <subsection name="Working out the kinks">
    <b>Getting SCP to work with private/public key authentication</b><br/>
    
      1. on a linux box execute 'ssh-keygen -t rsa'<br/>
      2. same linux box execute 'cat id_rsa.pub &gt;&gt; authorized_keys' and 'cat id_rsa.pub &gt;&gt; authorized_keys2'<br/>
      3. Copy id_rsa and id_rsa.pub to my windows box<br/>
      4. Import id_rsa into puttygen<br/>
      5. export id_rsa from puttygen to OpenSSH key<br/>
      6. The key you exported from puttygen is the one you reference from the &lt;privateKey&gt; element<br/>
      7. Manually create the %USERPROFILE%\.ssh directory<br/>
      8. Manually add the %USERPROFILE%\.ssh\known_hosts file with the entry for the host that you are accessing<br/>
      Some of this has been described in this <a href="http://www.mail-archive.com/users@maven.apache.org/msg48313.html">article</a>.
  </subsection>
  
</section>
</body>

</document>
