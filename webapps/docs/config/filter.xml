<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="filter.html">

  &project;

  <properties>
    <title>Container Provided Filters</title>
  </properties>

<body>

<section name="Table of Contents">
<toc/>
</section>

<section name="Introduction">

  <p>Tomcat provides a number of <strong>Filters</strong> which may be
  configured for use with all web applications using
  <code>$CATALINA_BASE/conf/web.xml</code> or may be configured for individual
  web applications by configuring them in the application's
  <code>WEB-INF/web.xml</code>. Each filter is described below.</p>

    <blockquote><em>
    <p>This description uses the variable name $CATALINA_BASE to refer the
    base directory against which most relative paths are resolved. If you have
    not configured Tomcat for multiple instances by setting a CATALINA_BASE
    directory, then $CATALINA_BASE will be set to the value of $CATALINA_HOME,
    the directory into which you have installed Tomcat.</p>
    </em></blockquote>

</section>


<section name="Add Default Character Set Filter">

  <subsection name="Introduction">

    <p>The HTTP specification is clear that if no character set is specified for
    media sub-types of the "text" media type, the ISO-8859-1 character set must
    be used. However, browsers may attempt to auto-detect the character set.
    This may be exploited by an attacker to perform an XSS attack. Internet
    Explorer has this behaviour by default. Other browsers have an option to
    enable it.</p>
    
    <p>This filter prevents the attack by explicitly setting a character set.
    Unless the provided character set is explicitly overridden by the user the
    browser will adhere to the explicitly set character set, thus preventing the
    XSS attack.</p>
    
  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the Add Default Character Set Filter is
    <strong><code>org.apache.catalina.filters.AddDefaultCharsetFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The Add Default Character Set Filter does not support any initialization
    parameters.</p>

  </subsection>

</section>


<section name="CSRF Prevention Filter">

  <subsection name="Introduction">

    <p>This filter provides basic CSRF protection for a web application. The
    filter assumes that it is mapped to <code>/*</code> and that all URLs
    returned to the client are encoded via a call to
    <code>HttpServletResponse#encodeRedirectURL(String)</code> or
    <code>HttpServletResponse#encodeURL(String)</code>.</p>
    
    <p>This filter prevents CSRF by generating a nonce and storing it in the
    session. URLs are also encoded with the same nonce. When the next request is
    received the nonce in the request is compared to the nonce in the session
    and only if they are the same is the request allowed to continue.</p>
    
  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the CSRF Prevention Filter is
    <strong><code>org.apache.catalina.filters.CsrfPreventionFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The CSRF Prevention Filter supports the following initialisation
    parameters:</p>

    <attributes>

      <attribute name="entryPoints" required="false">
        <p>A comma separated list of URLs that will not be tested for the
        presence of a valid nonce. They are used to provide a way to navigate
        back to a protected application after having navigated away from it.
        Entry points will be limited to HTTP GET requests and should not trigger
        any security sensitive actions.</p>
      </attribute>
      
      <attribute name="nonceCacheSize" required="false">
        <p>The number of previously issued nonces that will be cached on a LRU
        basis to support parallel requests, limited use of the refresh and back
        in the browser and similar behaviors that may result in the submission
        of a previous nonce rather than the current one. If not set, the default
        value of 5 will be used.</p>
      </attribute>
      
    </attributes>
    
  </subsection>

</section>


<section name="Remote Address Filter">

  <subsection name="Introduction">

    <p>The <strong>Remote Address Filter</strong> allows you to compare the
    IP address of the client that submitted this request against one or more
    <em>regular expressions</em>, and either allow the request to continue
    or refuse to process the request from this client. </p>

    <p>The syntax for <em>regular expressions</em> is different than that for
    'standard' wildcard matching. Tomcat uses the <code>java.util.regex</code>
    package. Please consult the Java documentation for details of the
    expressions supported.</p>

  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the Remote Address Filter is
    <strong><code>org.apache.catalina.filters.RemoteAddrFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The <strong>Remote Address Filter</strong> supports the following
    initialisation parameters:</p>

    <attributes>

      <attribute name="allow" required="false">
        <p>A comma-separated list of <em>regular expression</em> patterns
        that the remote client's IP address is compared to.  If this attribute
        is specified, the remote address MUST match for this request to be
        accepted.  If this attribute is not specified, all requests will be
        accepted UNLESS the remote address matches a <code>deny</code>
        pattern.</p>
      </attribute>

      <attribute name="deny" required="false">
        <p>A comma-separated list of <em>regular expression</em> patterns
        that the remote client's IP address is compared to.  If this attribute
        is specified, the remote address MUST NOT match for this request to be
        accepted.  If this attribute is not specified, request acceptance is
        governed solely by the <code>accept</code> attribute.</p>
      </attribute>

    </attributes>

  </subsection>

</section>


<section name="Remote Host Filter">

  <subsection name="Introduction">

    <p>The <strong>Remote Host Filter</strong> allows you to compare the
    hostname of the client that submitted this request against one or more
    <em>regular expressions</em>, and either allow the request to continue
    or refuse to process the request from this client. </p>

    <p>The syntax for <em>regular expressions</em> is different than that for
    'standard' wildcard matching. Tomcat uses the <code>java.util.regex</code>
    package. Please consult the Java documentation for details of the
    expressions supported.</p>

  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the Remote Address Filter is
    <strong><code>org.apache.catalina.filters.RemoteHostFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The <strong>Remote Host Filter</strong> supports the following
    initialisation parameters:</p>

    <attributes>

      <attribute name="allow" required="false">
        <p>A comma-separated list of <em>regular expression</em> patterns
        that the remote client's hostname is compared to.  If this attribute
        is specified, the remote hostname MUST match for this request to be
        accepted.  If this attribute is not specified, all requests will be
        accepted UNLESS the remote hostname matches a <code>deny</code>
        pattern.</p>
      </attribute>

      <attribute name="deny" required="false">
        <p>A comma-separated list of <em>regular expression</em> patterns
        that the remote client's hostname is compared to.  If this attribute
        is specified, the remote hostname MUST NOT match for this request to be
        accepted.  If this attribute is not specified, request acceptance is
        governed solely by the <code>accept</code> attribute.</p>
      </attribute>

    </attributes>

  </subsection>

</section>


<section name="Remote IP Filter">

  <subsection name="Introduction">

    <p>Tomcat port of
    <a href="http://httpd.apache.org/docs/trunk/mod/mod_remoteip.html">mod_remoteip</a>,
    this filter replaces the apparent client remote IP address and hostname for
    the request with the IP address list presented by a proxy or a load balancer
    via a request headers (e.g. &quot;X-Forwarded-For&quot;).</p>

    <p>Another feature of this filter is to replace the apparent scheme
    (http/https), server port and <code>request.secure</code> with the scheme presented 
    by a proxy or a load balancer via a request header 
    (e.g. &quot;X-Forwarded-Proto&quot;).</p>
 
    <p>If used in conjunction with Remote Address/Host filters then this filter
    should be defined first to ensure that the correct client IP address is
    presented to the Remote Address/Host filters.</p>
   
  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the Remote IP Filter is
    <strong><code>org.apache.catalina.filters.RemoteIpFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Basic configuration to handle &#x27;x-forwarded-for&#x27;">
    <p>
    The filter will process the <tt>x-forwarded-for</tt> http header.
    </p>
    <source>
      &lt;filter&gt;
        &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
      &lt;/filter&gt;
      
      &lt;filter-mapping&gt;
        &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
      &lt;/filter-mapping&gt;
    </source>
  </subsection>
    
  <subsection name="Basic configuration to handle &#x27;x-forwarded-for&#x27; and &#x27;x-forwarded-proto&#x27;">
  
    <p>
    The filter will process <tt>x-forwarded-for</tt> and 
    <tt>x-forwarded-proto</tt> http headers. Expected value for the
    <tt>x-forwarded-proto</tt> header in case of SSL connections is 
    <tt>https</tt> (case insensitive). </p>
    <source>
      &lt;filter&gt;
        &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
        &lt;init-param&gt;
          &lt;param-name&gt;protocolHeader&lt;/param-name&gt;
          &lt;param-value&gt;x-forwarded-proto&lt;/param-value&gt;
        &lt;/init-param&gt;
      &lt;/filter&gt;
      
      &lt;filter-mapping&gt;
        &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;
      &lt;/filter-mapping&gt;
    </source>
  </subsection>
    
  <subsection name="Advanced configuration with internal proxies">
    <p>RemoteIpFilter configuration: </p>
    <source>
     &lt;filter&gt;
       &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
       &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;allowedInternalProxies&lt;/param-name&gt;
         &lt;param-value&gt;192\.168\.0\.10, 192\.168\.0\.11&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-for&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpProxiesHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-by&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;protocolHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-proto&lt;/param-value&gt;
       &lt;/init-param&gt;
     &lt;/filter&gt;
    </source>
    <p>Request values: 
    <table border="1" cellpadding="5">
      <tr>
        <th bgcolor="#023264"><font color="#ffffff">Property</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value Before RemoteIpFilter</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value After RemoteIpFilter</font></th>
      </tr> 
      <tr>
        <td> request.remoteAddr </td>
        <td> 192.168.0.10 </td>
        <td> 140.211.11.130 </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-for&#x27;<tt>]</tt> </td>
        <td> 140.211.11.130, 192.168.0.10 </td>
        <td> null </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-by&#x27;<tt>]</tt> </td>
        <td> null </td>
        <td> null </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-proto&#x27;<tt>]</tt> </td>
        <td> https </td>
        <td> https </td>
      </tr> 
      <tr>
        <td> request.scheme </td>
        <td> http </td>
        <td> https </td>
      </tr> 
      <tr>
        <td> request.secure </td>
        <td> false </td>
        <td> true </td>
      </tr> 
      <tr>
        <td> request.serverPort </td>
        <td> 80 </td>
        <td> 443 </td>
      </tr> 
    </table>
    </p>
    <p>
    Note : <tt>x-forwarded-by</tt> header is <tt>null</tt> because only 
    internal proxies has been traversed by the request. 
    <tt>x-forwarded-for</tt> is <tt>null</tt> because all the proxies are 
    trusted or internal. 
    </p>
  </subsection>
    
    
  <subsection name="Advanced configuration with trusted proxies">
    <p>RemoteIpFilter configuration: </p>
    <source>
     &lt;filter&gt;
       &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
       &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;allowedInternalProxies&lt;/param-name&gt;
         &lt;param-value&gt;192\.168\.0\.10, 192\.168\.0\.11&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-for&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpProxiesHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-by&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;trustedProxies&lt;/param-name&gt;
         &lt;param-value&gt;proxy1, proxy2&lt;/param-value&gt;
       &lt;/init-param&gt;
     &lt;/filter&gt;
    </source>
    <p>Request values: <table border="1" cellpadding="5">
      <tr>
        <th bgcolor="#023264"><font color="#ffffff">Property</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value Before RemoteIpFilter</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value After RemoteIpFilter</font></th>
      </tr> 
      <tr>
        <td> request.remoteAddr </td>
        <td> 192.168.0.10 </td>
        <td> 140.211.11.130 </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-for&#x27;<tt>]</tt> </td>
        <td> 140.211.11.130, proxy1, proxy2 </td>
        <td> null </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-by&#x27;<tt>]</tt> </td>
        <td> null </td>
        <td> proxy1, proxy2 </td>
      </tr> 
    </table>
    </p>
    <p>
    Note : <tt>proxy1</tt> and <tt>proxy2</tt> are both trusted proxies that 
    come in <tt>x-forwarded-for</tt> header, they both are migrated in 
    <tt>x-forwarded-by</tt> header. <tt>x-forwarded-for</tt> is <tt>null</tt> 
    because all the proxies are trusted or internal.
    </p>
  </subsection>
    
  <subsection name="Advanced configuration with internal and trusted proxies">
    <p>RemoteIpFilter configuration: </p>
    <source>
     &lt;filter&gt;
       &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
       &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;allowedInternalProxies&lt;/param-name&gt;
         &lt;param-value&gt;192\.168\.0\.10, 192\.168\.0\.11&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-for&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpProxiesHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-by&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;trustedProxies&lt;/param-name&gt;
         &lt;param-value&gt;proxy1, proxy2&lt;/param-value&gt;
       &lt;/init-param&gt;
     &lt;/filter&gt;
    </source>
    <p>Request values: <table border="1" cellpadding="5">
      <tr>
        <th bgcolor="#023264"><font color="#ffffff">Property</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value Before RemoteIpFilter</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value After RemoteIpFilter</font></th>
      </tr> 
      <tr>
        <td> request.remoteAddr </td>
        <td> 192.168.0.10 </td>
        <td> 140.211.11.130 </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-for&#x27;<tt>]</tt> </td>
        <td> 140.211.11.130, proxy1, proxy2, 192.168.0.10 </td>
        <td> null </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-by&#x27;<tt>]</tt> </td>
        <td> null </td>
        <td> proxy1, proxy2 </td>
      </tr> 
    </table>
    </p>
    <p>
    Note : <tt>proxy1</tt> and <tt>proxy2</tt> are both trusted proxies that 
    come in <tt>x-forwarded-for</tt> header, they both are migrated in 
    <tt>x-forwarded-by</tt> header. As <tt>192.168.0.10</tt> is an internal 
    proxy, it does not appear in <tt>x-forwarded-by</tt>. 
    <tt>x-forwarded-for</tt> is <tt>null</tt> because all the proxies are 
    trusted or internal.
    </p>
  </subsection>
    
  <subsection name="Advanced configuration with an untrusted proxy">
    
    <p>RemoteIpFilter configuration: </p>
    <source>
     &lt;filter&gt;
       &lt;filter-name&gt;RemoteIpFilter&lt;/filter-name&gt;
       &lt;filter-class&gt;org.apache.catalina.filters.RemoteIpFilter&lt;/filter-class&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;allowedInternalProxies&lt;/param-name&gt;
         &lt;param-value&gt;192\.168\.0\.10, 192\.168\.0\.11&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-for&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;remoteIpProxiesHeader&lt;/param-name&gt;
         &lt;param-value&gt;x-forwarded-by&lt;/param-value&gt;
       &lt;/init-param&gt;
       &lt;init-param&gt;
         &lt;param-name&gt;trustedProxies&lt;/param-name&gt;
         &lt;param-value&gt;proxy1, proxy2&lt;/param-value&gt;
       &lt;/init-param&gt;
     &lt;/filter&gt;
    </source>
    <p>Request values: <table border="1" cellpadding="5">
      <tr>
        <th bgcolor="#023264"><font color="#ffffff">Property</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value Before RemoteIpFilter</font></th>
        <th bgcolor="#023264"><font color="#ffffff">Value After RemoteIpFilter</font></th>
      </tr> 
      <tr>
        <td> request.remoteAddr </td>
        <td> 192.168.0.10 </td>
        <td> untrusted-proxy </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-for&#x27;<tt>]</tt> </td>
        <td> 140.211.11.130, untrusted-proxy, proxy1 </td>
        <td> 140.211.11.130 </td>
      </tr> 
      <tr>
        <td> request.header<tt>[</tt>&#x27;x-forwarded-by&#x27;<tt>]</tt> </td>
        <td> null </td>
        <td> proxy1 </td>
      </tr> 
    </table>
    </p>
    <p>
    Note : <tt>x-forwarded-by</tt> holds the trusted proxy <tt>proxy1</tt>. 
    <tt>x-forwarded-by</tt> holds <tt>140.211.11.130</tt> because 
    <tt>untrusted-proxy</tt> is not trusted and thus, we can not trust that 
    <tt>untrusted-proxy</tt> is the actual remote ip. 
    <tt>request.remoteAddr</tt> is <tt>untrusted-proxy</tt> that is an IP 
    verified by <tt>proxy1</tt>. 
    </p>
  </subsection>

  <subsection name="Initialisation parameters">
  
    <p>The <strong>Remote IP Filter</strong> supports the
    following initialisation parameters:</p>

    <attributes>

      <attribute name="remoteIpHeader" required="false">
        <p>Name of the HTTP Header read by this valve that holds the list of
        traversed IP addresses starting from the requesting client. If not
        specified, the default of <code>x-forwarded-for</code> is used.</p>
      </attribute>

      <attribute name="internalProxies" required="false">
        <p>List of internal proxies' IP addresses as comma separated regular
        expressions. If they appear in the <strong>remoteIpHeader</strong>
        value, they will be trusted and will not appear in the
        <strong>proxiesHeader</strong> value. If not specified the default value
        of <code>10\.\d{1,3}\.\d{1,3}\.\d{1,3}, 192\.168\.\d{1,3}\.\d{1,3},
        169\.254\.\d{1,3}\.\d{1,3}, 127\.\d{1,3}\.\d{1,3}\.\d{1,3}</code> will
        be used.</p>
      </attribute>

      <attribute name="proxiesHeader" required="false">
        <p>Name of the HTTP header created by this valve to hold the list of
        proxies that have been processed in the incoming
        <strong>remoteIpHeader</strong>. If not specified, the default of
        <code>x-forwarded-by</code> is used.</p>
      </attribute>

      <attribute name="trustedProxies" required="false">
        <p>List of trusted proxies' IP addresses as comma separated regular
        expressions. If they appear in the <strong>remoteIpHeader</strong>
        value, they will be trusted and will appear in the
        <strong>proxiesHeader</strong> value. If not specified, no proxies will
        be trusted.</p>
      </attribute>

      <attribute name="protocolHeader" required="false">
        <p>Name of the HTTP Header read by this valve that holds the protocol
        used by the client to connect to the proxy. If not specified, the
        default of <code>null</code> is used.</p>
      </attribute>

      <attribute name="protocolHeaderHttpsValue" required="false">
        <p>Value of the <strong>protocolHeader</strong> to indicate that it is
        an HTTPS request. If not specified, the default of <code>https</code> is
        used.</p>
      </attribute>

      <attribute name="httpServerPort" required="false">
         <p>Value returned by <code>ServletRequest.getServerPort()</code> 
         when the <strong>protocolHeader</strong> indicates <code>http</code> 
         protocol. If not specified, the default of <code>80</code> is
        used.</p>
      </attribute>

      <attribute name="httpsServerPort" required="false">
         <p>Value returned by <code>ServletRequest.getServerPort()</code> 
         when the <strong>protocolHeader</strong> indicates <code>https</code> 
         protocol. If not specified, the default of <code>443</code> is
        used.</p>
      </attribute>

    </attributes>


  </subsection>

</section>


<section name="Request Dumper Filter">

  <subsection name="Introduction">

    <p>The Request Dumper Filter logs information from the request and response
    objects and is intended to be used for debugging purposes. When using this
    Filter, it is recommended that the
    <code>org.apache.catalina.filter.RequestDumperFilter</code> logger is
    directed to a dedicated file and that the
    <code>org.apache.juli.VerbatimFormmater</code> is used.</p>

    <p><strong>WARNING: Using this filter has side-effects.</strong>  The
    output from this filter includes any parameters included with the request.
    The parameters will be decoded using the default platform encoding. Any
    subsequent calls to <code>request.setCharacterEncoding()</code> within
    the web application will have no effect.</p>
    
  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the Request Dumper Filter is
    <strong><code>org.apache.catalina.filters.RequestDumperFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The Request Dumper Filter does not support any initialization
    parameters.</p>

  </subsection>

  <subsection name="Sample Configuration">
  
    <p>The following entries in a web application's web.xml would enable the
    Request Dumper filter for all requests for that web application. If the
    entries were added to <code>CATALINA_BASE/conf/web.xml</code>, the Request
    Dumper Filter would be enabled for all web applications.</p>
    <source>
&lt;filter&gt;
    &lt;filter-name&gt;requestdumper&lt;/filter-name&gt;
    &lt;filter-class&gt;
        org.apache.catalina.filters.RequestDumperFilter
    &lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;requestdumper&lt;/filter-name&gt;
    &lt;url-pattern&gt;*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
    </source>
    
    <p>The following entries in CATALINA_BASE/conf/logging.properties would
    create a separate log file for the Request Dumper Filter output.</p>
    <source>
# To this configuration below, 1request-dumper.org.apache.juli.FileHandler
# also needs to be added to the handlers property near the top of the file
1request-dumper.org.apache.juli.FileHandler.level = INFO
1request-dumper.org.apache.juli.FileHandler.directory = ${catalina.base}/logs
1request-dumper.org.apache.juli.FileHandler.prefix = request-dumper.
1request-dumper.org.apache.juli.FileHandler.formatter = org.apache.juli.VerbatimFormatter
org.apache.catalina.filters.RequestDumperFilter.level = INFO
org.apache.catalina.filters.RequestDumperFilter.handlers = 1request-dumper.org.apache.juli.FileHandler
    </source>
  </subsection>
</section>


<section name="WebDAV Fix Filter">

  <subsection name="Introduction">

    <p>Microsoft operating systems have two WebDAV clients. One is used with
    port 80, the other is used for all other ports. The implementation used with
    port 80 does not adhere to the WebDAV specification and fails when trying to
    communicate with the Tomcat WebDAV Servlet. This Filter provides a fix for
    this by forcing the use of the WebDAV implementation that works, even when
    connecting via port 80.</p>
    
  </subsection>

  <subsection name="Filter Class Name">

    <p>The filter class name for the WebDAV Fix Filter is
    <strong><code>org.apache.catalina.filters.WebdavFixFilter</code>
    </strong>.</p>

  </subsection>

  <subsection name="Initialisation parameters">

    <p>The WebDAV Fix Filter does not support any initialization parameters.</p>

  </subsection>

</section>


</body>


</document>
