<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="systemprops.html">

  &project;

  <properties>
    <title>System Properties</title>
  </properties>

<body>

<section name="Introduction">
  <p>The follow sections list the system properties that may be set to modify
  the default Tomcat behaviour.</p>
</section>

<section name="Property replacements">
  <properties>
    <property name="org.apache.tomcat.util.digester. PROPERTY_SOURCE">
      <p>Set this to a fully qualified name of a class that implements 
         <code>org.apache.tomcat.util.IntrospectionUtils.PropertySource</code>.
         Required to have a public constructor with no arguments.</p>
      <p>Use this to add a property source, that will be invoked when <code>${parameter}</code>
         denoted parameters are found in the XML files that Tomcat parses.</p>
    </property>
  </properties>
  
</section>  

<section name="Clustering">
  <properties>

    <property name="org.apache.catalina. tribes.dns_lookups">
      <p>If <code>true</code>, the clustering module will attempt to use DNS to
      resolve any host names provided in the cluster configuration. If not
      specified, the default value of <code>false</code> will be used.</p>
    </property>

  </properties>

</section>

<section name="Expression Language">
  <properties>

    <property name="org.apache.el.parser.COERCE_TO_ZERO">
      <p>If <code>true</code>, when coercing expressions to numbers
      <code>""</code> and <code>null</code> will be coerced to zero as required
      by the specification. If not specified, the default value of
      <code>true</code> will be used.</p>
    </property>

  </properties>
</section>

<section name="Jasper">
  <properties>

    <property name="org.apache.jasper.compiler. Generator.VAR_EXPRESSIONFACTORY">
      <p>The name of the variable to use for the expression language expression
      factory. If not specified, the default value of
      <code>_el_expressionfactory</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.compiler. Generator.VAR_INSTANCEMANAGER">
      <p>The name of the variable to use for the instance manager factory. If
      not specified, the default value of <code>_jsp_instancemanager</code> will
      be used.</p>
    </property>

    <property name="org.apache.jasper.compiler. Parser.STRICT_QUOTE_ESCAPING">
      <p>If <code>false</code> the requirements for escaping quotes in JSP
      attributes will be relaxed so that a missing required quote will not
      cause an error. If not specified, the specification compliant default of
      <code>true</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.runtime. BodyContentImpl.LIMIT_BUFFER">
      <p>If <code>true</code>, any tag buffer that expands beyond
      <code>org.apache.jasper.Constants.DEFAULT_TAG_BUFFER_SIZE</code> will be
      destroyed and a new buffer created of the default size. If not specified,
      the default value of <code>false</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.runtime. JspFactoryImpl.USE_POOL">
      <p>If <code>true</code>, a ThreadLocal <code>PageContext</code> pool will
      be used. If not specified, the default value of <code>true</code> will be
      used.</p>
    </property>

    <property name="org.apache.jasper.runtime. JspFactoryImpl.POOL_SIZE">
      <p>The size of the ThreadLocal <code>PageContext</code>. If not specified,
      the default value of <code>8</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. JSP_SERVLET_BASE">
      <p>The base class of the Servlets generated from the JSPs. If not
      specified, the default value of
      <code>org.apache.jasper.runtime.HttpJspBase</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. SERVICE_METHOD_NAME">
      <p>The name of the service method called by the base class. If not
      specified, the default value of <code>_jspService</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. SERVLET_CLASSPATH">
      <p>The name of the ServletContext attribute that provides the classpath
      for the JSP. If not specified, the default value of
      <code>org.apache.catalina.jsp_classpath</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. JSP_FILE">
      <p>The name of the request attribute for <code>&lt;jsp-file&gt;</code>
      element of a servlet definition. If present on a request, this overrides
      the value returned by <code>request.getServletPath()</code> to select the
      JSP page to be executed. If not specified, the default value of
      <code>org.apache.catalina.jsp_file</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. PRECOMPILE">
      <p>The name of the query parameter that causes the JSP engine to just
      pregenerate the servlet but not invoke it. If not specified, the default
      value of <code>org.apache.catalina.jsp_precompile</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. JSP_PACKAGE_NAME">
      <p>The default package name for compiled jsp pages. If not specified, the
      default value of <code>org.apache.jsp</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. TAG_FILE_PACKAGE_NAME">
      <p>The default package name for tag handlers generated from tag files. If
      not specified, the default value of <code>org.apache.jsp.tag</code> will
      be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. ALT_DD_ATTR">
      <p>The servlet context attribute under which the alternate deployment
      descriptor for this web application is stored. If not specified, the
      default value of <code>org.apache.catalina.deploy.alt_dd</code> will
      be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. TEMP_VARIABLE_NAME_PREFIX">
      <p>Prefix to use for generated temporary variable names. If not specified,
      the default value of <code>_jspx_temp</code> will be used.</p>
    </property>

    <property name="org.apache.jasper.Constants. USE_INSTANCE_MANAGER_FOR_TAGS">
      <p>If <code>true</code>, the instance manager is used to obtain tag
      handler instances. If not specified, <code>false</code> will be used.</p>
    </property>

  </properties>

</section>


<section name="Security">

  <properties>

    <property name="org.apache.catalina.connector. RECYCLE_FACADES">
      <p>If this is <code>true</code> or if a security manager is in use a new
      facade object will be created for each request. If not specified, the
      default value of <code>false</code> will be used.</p>
    </property>

    <property
    name="org.apache.catalina.connector. CoyoteAdapter.ALLOW_BACKSLASH">
      <p>If this is <code>true</code> the '\' character will be permitted as a
      path delimiter. If not specified, the default value of <code>false</code>
      will be used.</p>
    </property>

    <property
    name="org.apache.tomcat.util.buf. UDecoder.ALLOW_ENCODED_SLASH">
      <p>If this is <code>true</code> '%2F' and '%5C' will be permitted as path
      delimiters. If not specified, the default value of <code>false</code> will
      be used.</p>
    </property>

    <property
    name="org.apache.coyote. USE_CUSTOM_STATUS_MSG_IN_HEADER"><p>If this is
      <code>true</code> custom HTTP status messages will be used within HTTP
      headers. Users must ensure that any such message is ISO-8859-1 encoded,
      particularly if user provided input is included in the message, to prevent
      a possible XSS vulnerability. If not specified the default value of
      <code>false</code> will be used.</p>
    </property>

  </properties>

</section>


<section name="Specification">

  <properties>

    <property name="org.apache.catalina. STRICT_SERVLET_COMPLIANCE">
      <p>If this is <code>true</code> the following actions will occur:
      <ul>
      <li>any wrapped request or response object passed to an application
      dispatcher will be checked to ensure that it has wrapped the original
      request or response. (SRV.8.2 / SRV.14.2.5.1)
      </li>
      <li>a call to <code>Response.getWriter()</code> if no character encoding
      has been specified will result in subsequent calls to
      <code>Response.getCharacterEncoding()</code> returning
      <code>ISO-8859-1</code> and the <code>Content-Type</code> response header
      will include a <code>charset=ISO-8859-1</code> component. (SRV.15.2.22.1)
      </li>
      <li>every request that is associated with a session will cause the
      session's last accessed time to be updated regardless of whether or not
      the request explicitly accesses the session. (SRV.7.6)  
      </li>
      <li>
        cookies will be parsed strictly, by default v0 cookies will not work with any invalid characters.
        <br/>If set to false, any v0 cookie with invalid character will be switched to a v1 cookie and 
        the value will be quoted.
      </li>
      <li>
        <code>ServletContext.getResource/getResourceAsStream</code> must start with "/"<br/>
        if set to false, code like <code>getResource("myfolder/myresource.txt")</code> will work
      </li>
      <li>
        The default value will be changed for
        <code>org.apache.tomcat.util.http.ServerCookie.ALWAYS_ADD_EXPIRES</code>.
        <code>org.apache.tomcat.util.http.ServerCookie.FWD_SLASH_IS_SEPARATOR</code>.
        <code>org.apache.tomcat.util.http.ServerCookie.STRICT_NAMING</code>.
      </li>
      </ul>
      </p>
      <p>Note that changing a number of the above defaults is likely to break
      the majority of systems as a number of browsers are unable to correctly
      handle the cookie headers that result from a strict adherence to the
      specifications. Defaults, regardless of whether or not they have been
      changed by setting
      <code>org.apache.catalina.STRICT_SERVLET_COMPLIANCE</code> can always be
      overridden by explicitly setting the appropriate system property.</p>
    </property>

    <property
    name="org.apache.catalina.session. StandardSession.ACTIVITY_CHECK">
      <p>If this is <code>true</code> or if
      <code>org.apache.catalina.STRICT_SERVLET_COMPLIANCE</code> is
      <code>true</code> Tomcat will track the number of active requests for each
      session. When determining if a session is valid, any session with at least
      one active request will always be considered valid. If not specified, the
      default value of <code>false</code> will be used.</p>
    </property>

    <property
    name="org.apache.tomcat.util.http. ServerCookie.ALWAYS_ADD_EXPIRES">
      <p>If this is <code>true</code> Tomcat will always add an expires
      parameter to a SetCookie header even for cookies with version greater than
      zero. This is to work around a known IE6 and IE7 bug that causes IE to
      ignore the Max-Age parameter in a SetCookie header. If not specified, the
      default value will be used. If
      <code>org.apache.catalina.STRICT_SERVLET_COMPLIANCE</code> is set to
      <code>true</code>, the default of this setting will be <code>false</code>,
      else the default value will be <code>true</code>.</p>
    </property>

    <property
    name="org.apache.tomcat.util.http. ServerCookie.FWD_SLASH_IS_SEPARATOR">
      <p> If this is true then the <code>/</code> (forward slash) character will
      be treated as a separator. Note that this character is frequently used in
      cookie path attributes and some browsers will fail to process a cookie if
      the path attribute is quoted as is required by a strict adherence to the
      specifications. If not specified, the default value will be used. If
      <code>org.apache.catalina.STRICT_SERVLET_COMPLIANCE</code> is set to
      <code>true</code>, the default of this setting will be <code>true</code>,
      else the default value will be <code>false</code>.</p>
    </property>

    <property
    name="org.apache.tomcat.util.http. ServerCookie.STRICT_NAMING">
      <p> If this is true then the requirements of the Servlet specification
      that Cookie names must adhere to RFC2109 (no use of separators) will be
      enforced. If not specified, the default value will be used. If
      <code>org.apache.catalina.STRICT_SERVLET_COMPLIANCE</code> is set to
      <code>true</code>, the default of this setting will be <code>true</code>,
      else the default value will be <code>false</code>.</p>
    </property>

  </properties>

</section>


<section name="Sessions">

  <properties>

    <property name="org.apache.catalina.SESSION_COOKIE_NAME">
      <p>An alternative name for the session cookie. Defaults to
      <code>JSESSIONID</code>. Note that the Servlet specification requires
      this to be <code>JSESSIONID</code>. You should not rely on being able to
      change this.</p>
    </property>

    <property name="org.apache.catalina.SESSION_PARAMETER_NAME">
      <p>An alternative name for the session path parameter. Defaults to
      <code>jsessionid</code>. Note that the Servlet specification requires
      this to be <code>jsessionid</code>. You should not rely on being able to
      change this.</p>
    </property>

    <property name="org.apache.catalina.SSO_SESSION_COOKIE_NAME">
      <p>An alternative name for the single sign on session cookie. Defaults to
      <code>JSESSIONIDSSO</code>.</p>
    </property>
    
  </properties>

</section>

<section name="Logging">

  <properties>

    <property name="org.apache.juli.AsyncOverflowDropType">
      <p>When the memory limit of records has been reached the system needs to determine what action to take.
         Currently there are three actions that can be taken:
         <ul>
           <li><code>int OVERFLOW_DROP_LAST = 1</code> - the record that caused the overflow will be dropped and not logged</li>
           <li><code>int OVERFLOW_DROP_FIRST = 2</code> - the record that is next in line to be logged will be dropped to make room for the latest record on the queue</li>
           <li><code>int OVERFLOW_DROP_FLUSH = 3</code> - suspend the thread while the queue empties out and flushes the entries to the write buffer</li>
           <li><code>int OVERFLOW_DROP_CURRENT = 4</code> - drop the current log entry</li>
         </ul>
         Default value is <code>1</code> (OVERFLOW_DROP_LAST).
      </p>
    </property>

    <property name="org.apache.juli.AsyncMaxRecordCount">
      <p>The max number of log records that the async logger will keep in memory. When this limit is reached and a new record is being logged by the 
         JULI framework the system will take an action based on the <code>org.apache.juli.AsyncOverflowDropType</code> setting.
         The default value is <code>10000</code> records.<br/>
         This number represents the global number of records, not on a per handler basis.
      </p>
    </property>

    <property name="org.apache.juli.AsyncLoggerPollInterval">
      <p>The poll interval in milliseconds for the asynchronous logger thread in milliseconds.
         If the log queue is empty, the async thread will issue a poll(poll interval)
         in order to not wake up to often.
         The default value is <code>1000</code> milliseconds.
      </p>
    </property>

  </properties>

</section>

<section name="Other">

  <properties>

    <property name="catalina.useNaming">
      <p>If this is <code>false</code> it will override the
      <code>useNaming</code> attribute for all <a href="context.html">
      Context</a> elements.</p>
    </property>

    <property name="jvmRoute">
      <p>Provides a default value for the <code>jvmRoute</code> attribute of the
      <a href="engine.html">Engine</a> element. It does not override the a value
      configured on the <a href="engine.html">Engine</a> element.</p>
    </property>

    <property
    name="org.apache.catalina.loader. WebappClassLoader.ENABLE_CLEAR_REFERENCES">
      <p>If <code>true</code>, Tomcat attempts to null out any static or final
      fields from loaded classes when a web application is stopped as a work
      around for apparent garbage collection bugs and application coding errors.
      </p>
      <p>There have been some issues reported with log4j when this option is
      <code>true</code>.</p>
      <p>Applications without memory leaks using recent JVMs should operate
      correctly with this option set to <code>false</code>.</p>
      <p>If not specified, the default value of <code>true</code> will be used.
      </p>
    </property>

    <property name="catalina.config">
      <p>The URL for the catalina.properties configuration file.</p>
    </property>

    <property name="tomcat.util.buf.StringCache.byte.enabled">
      <p>If <code>true</code>, the String cache is enabled for
      <code>ByteChunk</code>. If not specified, the default value of
      <code>false</code> will be used.</p>
    </property>

    <property name="tomcat.util.buf.StringCache.char.enabled">
      <p>If <code>true</code>, the String cache is enabled for
      <code>CharChunk</code>. If not specified, the default value of
      <code>false</code> will be used.</p>
    </property>

    <property name="tomcat.util.buf.StringCache.trainThreshold">
      <p>The number of times <code>toString()</code> must be called before the
      cache is activated. If not specified, the default value of
      <code>20000</code> will be used.</p>
    </property>

    <property name="tomcat.util.buf.StringCache.cacheSize">
      <p>The size of the String cache. If not specified, the default value of
      <code>200</code> will be used.</p>
    </property>

    <property name="tomcat.util.buf.StringCache.maxStringSize">
      <p>The maximum length of String that will be cached. If not specified, the
      default value of <code>128</code> will be used.</p>
    </property>

    <property name="org.apache.tomcat.util. http.FastHttpDateFormat.CACHE_SIZE">
      <p>The size of the cache to use parsed and formatted date value. If not
      specified, the default value of <code>1000</code> will be used.</p>
    </property>

    <property name="org.apache.tomcat.util. net.NioSelectorShared">
      <p>If <code>true</code>, use a shared selector for servlet write/read. If
      not specified, the default value of <code>true</code> will be used.</p>
    </property>
    
    <property name="org.apache.catalina.startup.EXIT_ON_INIT_FAILURE">
      <p>If <code>true</code>, the server will exit if an exception happens
         during the server initialization phase. The default is <code>false</code>.</p>
    </property>
    

  </properties>

</section>


</body>
</document>
